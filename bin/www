#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('lafleur:server');
var http = require('http');
const ejs=require("ejs")
const fs =require("fs")
// let type=[
//   {
//     name:"bulbe",
//     option:{
//       users:[
//         {
//         link:"/bulbe",name:"Bulbe"
//       },{
//         link:"/massif",name:"Massif"
//       },{
//         link:"/rosiers",name:"Rosiers"
//       }
//       ],produit:[
//         {
//           photo:"/images/bulbes_begonia.jpg",
//           reference:"b01",
//           designation:"3 bulbes de bégonia",
//           prix:5
//         }, {
//           photo:"/images/bulbes_dahlia.jpg",
//           reference:"b02",
//           designation:"10 bulbe de dalhias",
//           prix:12
//         }, {
//           photo:"/images/bulbes_glaieul.jpg",
//           reference:"b03",
//           designation:"50 glaieul",
//           prix:9
//         }
//       ]
// }
// },{
//   name:"massif",
//   option:{
//     users:[
//       {
//       link:"/bulbe",name:"Bulbe"
//     },{
//       link:"/massif",name:"Massif"
//     },{
//       link:"/rosiers",name:"Rosiers"
//     }
//     ],produit:[
//       {
//         photo:"/images/massif_marguerite.jpg",
//         reference:"m01",
//         designation:"lot de 3 marguerite",
//         prix:5
//       }, {
//         photo:"/images/massif_pensee.jpg",
//         reference:"m02",
//         designation:"pour un bouquet de 6 pensée ",
//         prix:6
//       }, {
//         photo:"/images/massif_melange.jpg",
//         reference:"m03",
//         designation:"mélange variée de 10 plante a massif",
//         prix:15
//       }
//     ]
// }
// },{
//   name:"rosiers",
//   option:{
//     users:[
//       {
//       link:"/bulbe",name:"Bulbe"
//     },{
//       link:"/massif",name:"Massif"
//     },{
//       link:"/rosiers",name:"Rosiers"
//     }
//     ],produit:[
//       {
//         photo:"/images/rosiers_gdefleur.jpg",
//         reference:"r01",
//         designation:"un pied spécial grandes fleur ",
//         prix:20
//       }, {
//         photo:"/images/rosiers_parfum.jpg",
//         reference:"r02",
//         designation:"une variété séléctionée pour son parfum",
//         prix:9
//       }, {
//         photo:"/images/rosiers_arbuste.jpg",
//         reference:"r03",
//         designation:"rosiers arbuste",
//         prix:8
//       }
//     ]
// }
// }

// ]
// const build=ejs.compile(fs.readFileSync("./views/bulbe.html").toString())
// type.map((nam)=>{
//   fs.writeFileSync(`./v1/${nam.name}.html`,build(nam.option))
// })
// fs.writeFileSync("./v1/accueil.html",ejs.compile(fs.readFileSync("./views/index.html").toString())({users:[
//   {
//   link:"/bulbe",name:"Bulbe"
// },{
//   link:"/massif",name:"Massif"
// },{
//   link:"/rosiers",name:"Rosiers"
// }
// ]}))
/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.log('Listening on ' + bind);
}
